{
	"info": {
		"_postman_id": "c55e2247-4ac4-4f17-a8d5-bc7d416b9de2",
		"name": "01 - TerraAzSql - API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "122304"
	},
	"item": [
		{
			"name": "Tareas",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validate response to have a body\r",
									"pm.response.to.have.jsonBody();\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"// Validate response body to have a property named 'tareaID'\r",
									"// with the ID of the new Tarea\r",
									"pm.expect(responseJson).to.have.property('tareaID');\r",
									"\r",
									"// Validate response to have a header named 'location'\r",
									"pm.response.to.have.header('location');\r",
									"\r",
									"// Validate response header 'lcoation' to include 'tareaID'\r",
									"pm.expect(pm.response.headers.get('location')).to.contain(responseJson.tareaID);\r",
									"\r",
									"// If all the tests pass, store 'tareaID' in a temporal variable\r",
									"pm.variables.set('tareaID', tareaID);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"categoriaID\": \"7c2196e4-9d06-4574-a212-d4bdef0a4bfb\",\r\n    \"titulo\": \"Visitar a mi tía\",\r\n    \"descripcion\": \"Acción de visita\",\r\n    \"prioridadTarea\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/tarea",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"tarea"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if(pm.variables.has('tareaID')) {\r",
									"    let url = pm.request.url.toString();\r",
									"    const searchParam = 'tarea/';\r",
									"    const index = url.indexOf(searchParam);\r",
									"    request.url = url.substr(0,  index + searchParam.length) + pm.variables.get('tareaID');\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validate response to have a body\r",
									"pm.response.to.have.jsonBody();\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"if(pm.response.status == \"OK\") {\r",
									"    // Validate response body to have a property named 'tareaID'\r",
									"    // with the ID of the new Tarea\r",
									"    pm.expect(responseJson).to.have.property('tareaID');\r",
									"\r",
									"    if(pm.variables.has('tareaID')) {   \r",
									"        // Validate response to have 'tareaID' equals to the 'tareaID' \r",
									"        // of the Tarea added in the Add API\r",
									"        pm.expect(responseJson.tareaID).to.equals(pm.variables.get('tareaID'));\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/tarea/a7d36491-db44-48c7-a5cc-7c524819d4a0",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"tarea",
								"a7d36491-db44-48c7-a5cc-7c524819d4a0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"categoriaID\": \"7c2196e4-9d06-4574-a212-d4bdef0a4bfc\",\r\n    \"titulo\": \"Visitar a mi tía 3\",\r\n    \"descripcion\": \"Debo visitar a mi tía en su casa y recoger las boletas\",\r\n    \"prioridadTarea\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/tarea/e2d45cc2-bf86-45ec-8466-421ad930d222",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"tarea",
								"e2d45cc2-bf86-45ec-8466-421ad930d222"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/tarea/f2ca0bec-88ea-42f2-99db-fc1d36e84f01",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"tarea",
								"f2ca0bec-88ea-42f2-99db-fc1d36e84f01"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/tarea",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"tarea"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Categorias",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validate response to have a body\r",
									"pm.response.to.have.jsonBody();\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"// Validate response body to have a property named 'categoriaID'\r",
									"// with the ID of the new Categoria\r",
									"pm.expect(responseJson).to.have.property('categoriaID');\r",
									"\r",
									"// Validate response to have a header named 'location'\r",
									"pm.response.to.have.header('location');\r",
									"\r",
									"// Validate response header 'lcoation' to include 'categoriaID'\r",
									"pm.expect(pm.response.headers.get('location')).to.contain(responseJson.categoriaID);\r",
									"\r",
									"// If all the tests pass, store 'categoriaID' in a temporal variable\r",
									"pm.variables.set('categoriaID', categoriaID);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"nombre\": \"Prueba\",\r\n        \"descripcion\": \"Mi categoria\",\r\n        \"peso\": 50\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/categoria",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categoria"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if(pm.variables.has('categoriaID')) {\r",
									"    let url = pm.request.url.toString();\r",
									"    const searchParam = 'categoria/';\r",
									"    const index = url.indexOf(searchParam);\r",
									"    request.url = url.substr(0,  index + searchParam.length) + pm.variables.get('categoriaID');\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validate response to have a body\r",
									"pm.response.to.have.jsonBody();\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"if(pm.response.status == \"OK\") {\r",
									"    // Validate response body to have a property named 'categoriaID'\r",
									"    // with the ID of the new Categoria\r",
									"    pm.expect(responseJson).to.have.property('categoriaID');\r",
									"\r",
									"    if(pm.variables.has('categoriaID')) {   \r",
									"\r",
									"        // Validate response to have 'categoriaID' equals to the 'categoriaID' \r",
									"        // of the Categoria added in the Add API\r",
									"        pm.expect(responseJson.categoriaID).to.equals(pm.variables.get('categoriaID'));\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/categoria/be6ebde4-c7da-4eb5-865d-c42ea21ad0a2/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categoria",
								"be6ebde4-c7da-4eb5-865d-c42ea21ad0a2",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"nombre\": \"Prueba\",\r\n        \"descripcion\": \"Mi categoria 2\",\r\n        \"peso\": 50\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/categoria/fb794da0-e4b7-4eb1-8b83-afe606a08e34",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categoria",
								"fb794da0-e4b7-4eb1-8b83-afe606a08e34"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/categoria/c043c64c-8267-419e-9bff-cea342d9e23e",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categoria",
								"c043c64c-8267-419e-9bff-cea342d9e23e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/categoria",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categoria"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Check API Health",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{host}}/api/helloworld",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"helloworld"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}